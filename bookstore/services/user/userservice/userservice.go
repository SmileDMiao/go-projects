// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

//go:generate mockgen -destination ./userservice_mock.go -package userservice -source $GOFILE

package userservice

import (
	"context"

	"bookstore/services/user/user"

	"github.com/tal-tech/go-zero/zrpc"
)

type (
	CreateUserReq = user.CreateUserReq
	UserResp      = user.UserResp
	UpdateUserReq = user.UpdateUserReq

	UserService interface {
		CreateUser(ctx context.Context, in *CreateUserReq) (*UserResp, error)
		UpdateUser(ctx context.Context, in *UpdateUserReq) (*UserResp, error)
	}

	defaultUserService struct {
		cli zrpc.Client
	}
)

func NewUserService(cli zrpc.Client) UserService {
	return &defaultUserService{
		cli: cli,
	}
}

func (m *defaultUserService) CreateUser(ctx context.Context, in *CreateUserReq) (*UserResp, error) {
	client := user.NewUserServiceClient(m.cli.Conn())
	return client.CreateUser(ctx, in)
}

func (m *defaultUserService) UpdateUser(ctx context.Context, in *UpdateUserReq) (*UserResp, error) {
	client := user.NewUserServiceClient(m.cli.Conn())
	return client.UpdateUser(ctx, in)
}
